package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AccessRuleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessRuleAllPropertiesEquals(AccessRule expected, AccessRule actual) {
        assertAccessRuleAutoGeneratedPropertiesEquals(expected, actual);
        assertAccessRuleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessRuleAllUpdatablePropertiesEquals(AccessRule expected, AccessRule actual) {
        assertAccessRuleUpdatableFieldsEquals(expected, actual);
        assertAccessRuleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessRuleAutoGeneratedPropertiesEquals(AccessRule expected, AccessRule actual) {
        assertThat(expected)
            .as("Verify AccessRule auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessRuleUpdatableFieldsEquals(AccessRule expected, AccessRule actual) {
        assertThat(expected)
            .as("Verify AccessRule relevant properties")
            .satisfies(e -> assertThat(e.getStartDate()).as("check startDate").isEqualTo(actual.getStartDate()))
            .satisfies(e -> assertThat(e.getEndDate()).as("check endDate").isEqualTo(actual.getEndDate()))
            .satisfies(e -> assertThat(e.getNotes()).as("check notes").isEqualTo(actual.getNotes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessRuleUpdatableRelationshipsEquals(AccessRule expected, AccessRule actual) {
        assertThat(expected)
            .as("Verify AccessRule relationships")
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()))
            .satisfies(e -> assertThat(e.getRoom()).as("check room").isEqualTo(actual.getRoom()));
    }
}
